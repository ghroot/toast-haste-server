apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'artemis'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.onedaybeard.artemis:artemis-odb-gradle-plugin:2.3.0'
    }
}

repositories {
    flatDir {
        dirs 'lib'
    }
    mavenCentral()
}

dependencies {
    compile group: 'net.onedaybeard.artemis', name: 'artemis-odb', version: '2.3.0'
    compile group: 'net.onedaybeard.artemis', name: 'artemis-odb-serializer', version: '2.3.0'
    compile group: 'net.onedaybeard.artemis', name: 'artemis-odb-serializer-json', version: '2.3.0'
    compile group: 'net.onedaybeard.artemis', name: 'artemis-odb-serializer-kryo', version: '2.3.0'
    compile group: 'net.mostlyoriginal.artemis-odb', name: 'contrib-core', version: '2.4.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile group: 'org.jetlang', name: 'jetlang', version: '0.2.12'
    compile group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
    compile group: 'com.googlecode.lanterna', name: 'lanterna', version: '3.0.0'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.json', name: 'json', version: '20171018'
    compile name: 'haste-all-1.0.0'
    compile name: 'jsonbeans-0.9'

    testCompile 'junit:junit:4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
    testCompile 'org.awaitility:awaitility:3.0.0'
    testCompile 'io.cucumber:cucumber-java:6.8.1'
}

compileJava {
    sourceCompatibility = 15
    targetCompatibility = 15
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

weave {
    classesDir = new File(buildDir, "classes/java/main")
    dependsOn build
    enableArtemisPlugin = true
    enablePooledWeaving = true
    generateLinkMutators = true
    optimizeEntitySystems = true
}

jar {
    manifest {
        attributes 'Main-Class': 'com.vast.Main'
    }
}

task fatJar(type: Jar) {
    dependsOn weave
    manifest.from jar.manifest
    baseName = 'vast-server-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', 'src/test/resources']
        }
    }
}
